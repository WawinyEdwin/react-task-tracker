{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updateTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07b69c9f.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button =({ color, text, onClick }) => {\r\n\t\r\n\treturn(\r\n\t\t<button \r\n\t\tstyle={{backgroundColor : color}} className ='btn' onClick ={onClick} >\r\n\t \t\t{text} \r\n\t\t</button>\r\n\t\t);\r\n\r\n}\r\n\r\nButton.defaultProps = {\r\n\tcolor: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n\tonClick: PropTypes.string.isRequired\r\n\r\n}\r\n\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom';\r\nimport Button from './Button'\r\n\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd, onClick }) => \r\n{\r\n\tconst location = useLocation()\r\n\r\n\treturn (\r\n\t\t<header className ='header'>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t{location.pathname === '/' && (\r\n\t\t\t<Button color={showAdd ? 'red' : 'green'} \r\n\t\t\ttext={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n\t\t\t)}\r\n\t\t</header>\r\n\t\t);\r\n}\r\n\r\nHeader.defaultProps = {\r\n\ttitle: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => \r\n{\r\n\treturn (\r\n\t\t<footer className='footer'> \r\n\t\t\t<p> Copyright &copy; 2021 </p>\r\n\t\t\t<Link to='./about'> About </Link>\r\n\t\t</footer>\r\n\t\t);\r\n}\r\n\r\nexport default Footer","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\r\n\treturn (\r\n\t<div className={`task ${task.reminder ? 'reminder' : ''} `} \r\n\tonDoubleClick = { () => onToggle(task.id)} >\r\n\r\n\t\t<h3> {task.text} <FaTimes color = 'red' cursor = 'pointer' onClick = {() => onDelete(task.id) }  /> </h3> \r\n\t\t<p> {task.day} </p>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t{tasks.map((task) => (\r\n\t\t\t<Task \r\n\t\t\tkey ={task.id} \r\n\t\t\ttask={task} \r\n\t\t\tonDelete={onDelete}\r\n\t\t\tonToggle={onToggle} \r\n\t\t\t/> \r\n\t\t\t) ) }\r\n\t\t</>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default Tasks","import {useState} from 'react'\r\n\r\n\r\nconst AddTask = ({ onAdd }) => \r\n{\r\n\tconst [text, setText] = useState('')\r\n\tconst [day, setDay] = useState('')\r\n\tconst [reminder, setReminder] = useState('false')\r\n\r\nconst onSubmit = (e) => {\r\n\te.preventDefault()\r\n\r\n\tif (!text) \r\n\t{\r\n\t\talert ('Please add a task')\r\n\t\treturn\r\n\t}\r\n\r\n\tonAdd({text, day, reminder})\r\n\r\n\tsetText('')\r\n\tsetDay('')\r\n\tsetReminder(false)\r\n}\r\n\treturn (\r\n\t\t<form className='add-form' onSubmit ={onSubmit} >\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label> Task </label>\r\n\t\t\t\t<input type='text' placeholder='add task'\r\n\t\t\t\tvalue={text} onChange = {(e) => setText(e.target.value)} \r\n\t\t\t\t/>\r\n\t\t\t</div> \r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label> Day & Time </label>\r\n\t\t\t\t<input type='text' placeholder='add day and time'\r\n\t\t\t\tvalue={day} onChange = {(e) => setDay(e.target.value)} />\r\n\t\t\t</div> \r\n\t\t\t<div className=\"form-control form-control-check\">\r\n\t\t\t\t<label> Set Reminder </label>\r\n\t\t\t\t<input type='checkbox' \r\n\t\t\t\tchecked={reminder}\r\n\t\t\t\tvalue={reminder} \r\n\t\t\t\tonChange = {(e) => setReminder(e.currentTarget.checked)}/>\r\n\t\t\t</div> \r\n\r\n\t\t\t<input type='submit'  value='Save Task' className='btn btn-block' />\r\n\t\t</form>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default AddTask","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4> Version 1.0 </h4>\r\n            <Link to=\"/\"> Go Back </Link>\r\n        </div>\r\n         \r\n        \r\n    )\r\n}\r\n\r\nexport default About","import Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\nimport { useState, useEffect} from 'react'\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.css'\n\n\nconst App = ()  => \n{\nconst [showAddTask, setShowAddTask] = useState(false)\n\nconst[tasks,setTasks] = useState([])\n\nuseEffect(() => {\n  const getTasks = async () => {\n    const tasksFromServer = await fetchTasks()\n    setTasks(tasksFromServer)\n  }\n\n  getTasks()\n}, [])\n\n //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(`http://localhost:5000/tasks`)\n    const data = await res.json()\n\n    return data\n  }\n\n//fetch task\nconst fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n//add task\nconst addTask = async (task) => \n{\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-Type' : 'application/json'\n    },\n    body: JSON.stringify(task),\n  })\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n // const id =Math.floor(Math.random()\n  //  * 10000) + 1\n  //const newTask = { id, ...task}\n  \n  //setTasks([...tasks, newTask])\n}\n\n//delete tasks \nconst deleteTask = async (id) =>\n{\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE'\n  })\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//toggle reminder\nconst toggleReminder = async (id) =>\n{\n  const taskToToggle = await fetchTask(id) \n  const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateTask)\n  })\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? {...task, reminder: data.reminder} : task))\n}\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      \n        <Route path='/' exact render={(props) => (\n          <>\n          {showAddTask && <AddTask onAdd={addTask} />}\n          {tasks.length > 0 ? (\n          <Tasks tasks ={tasks}\n            onDelete={deleteTask}\n             onToggle ={toggleReminder} \n             />\n             ) : (\n            'No task To show')}\n          </>\n        )}/>\n        <Route path='/about' component={About} />\n      <Footer /> \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}